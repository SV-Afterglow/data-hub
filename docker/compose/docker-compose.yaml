version: '3.8'

services:
  signalk:
    build:
      context: ../..  # Go up two levels from docker/compose
      dockerfile: docker/signalk/Dockerfile
    image: ghcr.io/sv-afterglow/data-hub/signalk:latest
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=false"  # Managed by update-service
    network_mode: host  # Required for NMEA2000
    volumes:
      - ~/.signalk:/home/node/.signalk
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - influxdb

  influxdb:
    build:
      context: ../..
      dockerfile: docker/influxdb/Dockerfile
    image: ghcr.io/sv-afterglow/data-hub/influxdb:latest
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=false"  # Managed by update-service
    ports:
      - "8086:8086"
    volumes:
      - ~/influxdb-data:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=signalk
      - INFLUXDB_HTTP_AUTH_ENABLED=false
    networks:
      - data-hub

  grafana:
    build:
      context: ../..
      dockerfile: docker/grafana/Dockerfile
    image: ghcr.io/sv-afterglow/data-hub/grafana:latest
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=false"  # Managed by update-service
    ports:
      - "3001:3000"
    volumes:
      - ~/grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - influxdb
    networks:
      - data-hub

  system-metrics:
    build:
      context: ../..
      dockerfile: docker/system-metrics/Dockerfile
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=false"  # Managed by update-service
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /sys/class/thermal:/sys/class/thermal:ro
      - ~/.data-hub:/data  # Mount data directory for updated collector.py
    environment:
      - INFLUX_URL=http://influxdb:8086
      - COLLECTION_INTERVAL=10
    depends_on:
      - influxdb
    networks:
      - data-hub

  update-service:
    build:
      context: ../..
      dockerfile: docker/update-service/Dockerfile
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=false"  # Managed by update-service
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc:/etc:ro
      - ~/.data-hub:/data
      - ../..:/app/repo  # Mount repo root for access to Dockerfiles
    environment:
      - GITHUB_REPO=sv-afterglow/data-hub
      - GITHUB_BRANCH=main
      - UPDATE_CHECK_INTERVAL=3600
      - INFLUX_URL=http://influxdb:8086
      - DATA_DIR=/app  # Set data dir to container working directory
    depends_on:
      - influxdb  # Ensure influxdb starts first
    working_dir: /app/repo  # Set working directory to repo root
    networks:
      - data-hub

  watchtower:
    image: containrrr/watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --cleanup --interval 3600 --label-enable
    networks:
      - data-hub
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  network-monitor:
    build:
      context: ../..  # Go up two levels from docker/compose
      dockerfile: docker/network-monitor/Dockerfile
    image: ghcr.io/sv-afterglow/data-hub/network-monitor:latest
    restart: always
    network_mode: host  # Required for network interface access
    privileged: true    # Required for WiFi monitoring
    labels:
      - "com.centurylinklabs.watchtower.enable=false"  # Managed by update-service
    volumes:
      - /etc/localtime:/etc/localtime:ro  # System time sync
      - /proc/net/dev:/proc/net/dev:ro    # Network interface stats
      - /sys/class/net:/sys/class/net:ro  # Network interface info
      - ~/.data-hub:/data                 # Persistent data
    environment:
      - NETWORK_INTERFACE=wlan0
      - SPEED_TEST_INTERVAL=3600
      - WIFI_CHECK_INTERVAL=30
      - INFLUX_URL=http://influxdb:8086
      - MIN_SPEED_TEST_INTERVAL=600
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    depends_on:
      - influxdb  # Requires InfluxDB for metrics storage
    cap_add:
      - NET_ADMIN  # Required for network interface access
      - NET_RAW    # Required for raw socket access

networks:
  data-hub:
    driver: bridge
