name: Data Hub Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wireless-tools libiw-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install -r services/update_service/requirements.txt
        pip install -r services/system_metrics/requirements.txt
        pip install -r services/network_monitor/requirements.txt
        
    - name: Run unit tests
      run: |
        PYTHONPATH=$PYTHONPATH:$(pwd) pytest tests/unit/ --cov=services --cov-report=xml
        
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    
    services:
      influxdb:
        image: influxdb:1.8
        ports:
          - 8086:8086
          
      grafana:
        image: grafana/grafana:latest
        ports:
          - 3001:3000
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wireless-tools libiw-dev

    - name: Set up test environment
      run: |
        # Create test data directory
        mkdir -p ~/.data-hub/test
        # Create test configuration
        mkdir -p config/test
        echo "test: value" > config/test/test_config.yml
        # Create mock network interface for testing
        sudo ip link add test0 type dummy || true
        
    - name: Build services
      run: |
        docker-compose -f docker/compose/docker-compose.yaml build
        
    - name: Run integration tests
      run: |
        PYTHONPATH=$PYTHONPATH:$(pwd) pytest tests/integration/
        
  validation:
    name: Configuration Validation
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install validation dependencies
      run: |
        pip install pytest pyyaml jsonschema docker
        
    - name: Validate configurations
      run: |
        PYTHONPATH=$PYTHONPATH:$(pwd) pytest tests/validation/
        
    - name: Validate Dockerfiles
      run: |
        for dockerfile in $(find . -name Dockerfile); do
          docker build -f $dockerfile .
        done

  update-process:
    name: Update Process Test
    runs-on: ubuntu-latest
    needs: [unit-tests, validation]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up test environment
      run: |
        # Create test version
        mkdir -p updates/test-version
        cat > updates/test-version/manifest.yml << EOF
        version: "test"
        steps:
          - type: "service_config"
            path: "test/config.yml"
            target: "/data/test/config.yml"
            permissions: "644"
        EOF
        
    - name: Test update process
      run: |
        # Start required services
        docker-compose -f docker/compose/docker-compose.yaml up -d influxdb
        
        # Run update service tests
        PYTHONPATH=$PYTHONPATH:$(pwd) pytest tests/integration/test_service_interactions.py -k "test_update_service"

  docker-builds:
    name: Docker Build Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wireless-tools libiw-dev

    - name: Build all services
      run: |
        docker-compose -f docker/compose/docker-compose.yaml build
        
    - name: Test service startup
      run: |
        docker-compose -f docker/compose/docker-compose.yaml up -d
        sleep 30  # Wait for services to start
        docker-compose -f docker/compose/docker-compose.yaml ps
        docker-compose -f docker/compose/docker-compose.yaml logs
        
    - name: Verify service health
      run: |
        # Check each service's health status
        for service in influxdb grafana system_metrics update_service network_monitor; do
          docker inspect --format='{{.State.Health.Status}}' data-hub_${service}_1
        done

  notify:
    name: Notification
    needs: [unit-tests, integration-tests, validation, update-process, docker-builds]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Check build status
      if: ${{ contains(needs.*.result, 'failure') }}
      run: exit 1
